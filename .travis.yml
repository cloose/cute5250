language: cpp
compiler:
  - gcc
  - clang

env:
  - CODE_COVERAGE=0
  - CODE_COVERAGE=1

# gcov code coverage only works with gcc, so don't run it with clang.
matrix:
  exclude:
    - compiler: clang
      env: CODE_COVERAGE=1
        
before_install:
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test # for g++ 4.8
  - sudo add-apt-repository -y ppa:likemartinma/devel      # for CMake
  - sudo add-apt-repository -y ppa:ubuntu-sdk-team/ppa     # for Qt5
  - sudo apt-get update -qq

install:
  - sudo apt-get install g++-4.8 cmake qtbase5-dev
  - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8" CC="gcc-4.8"; fi
  - sudo rm /usr/bin/gcov && sudo ln -s /usr/bin/gcov-4.8 /usr/bin/gcov
  - wget https://googlemock.googlecode.com/files/gmock-1.7.0.zip
  - unzip gmock-1.7.0.zip
  - cd gmock-1.7.0 
  - mkdir build && cd build && cmake .. && make
  - cd ../gtest
  - mkdir build && cd build && cmake .. && make
  - cd ../..
  - export GMOCK_HOME=`pwd`
  - cd ..
  - sudo pip install cpp-coveralls --use-mirrors
  
before_script:
  - mkdir build
  - cd build
  - export LD_LIBRARY_PATH="../../lib:$LD_LIBRARY_PATH"
  - export CTEST_OUTPUT_ON_FAILURE=true         
  
script:
  - cmake .. -DBUILD_WITH_CODE_COVERAGE=$CODE_COVERAGE
  - make all 
  - make test

after_success:
  - cd ..
  - if [ "$CODE_COVERAGE" == "1" ]; then coveralls --build-root "./build" --exclude test --exclude gmock-1.7.0 --exclude-pattern '.*\.h' --exclude-pattern '.*CMake[^\.]*\.c(?:pp)?' --exclude-pattern '.*/moc[^\.]*\.cpp' --exclude-pattern '.*_automoc\.cpp'; fi
  
